<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<context:component-scan base-package="or.kosta.mvc"/>
	<mvc:annotation-driven/>
	<mvc:resources location="/resources/" mapping="/resources/**"/>

	<!-- View의 이름을 명시적(setViewName("")->InternatinalViewResolver로 받겠다.)
	으로 사용하지 않고 url값으로 받아서 (tilesViewResolver로 받겠다.)
	RequestDispatcher로 요청을 처리한다.(forward처리)
	order : handler 매핑의 우선순위
	 -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>		
		<property name="order" value="1"></property>
	</bean>
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles-definitions.xml</value>
			</list>
		</property>
	</bean>

	<!-- ==================================================================== -->
	<context:property-placeholder location="classpath:myinfo.properties"/>

	<!-- 스프링 메일 보내기 설정 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="username" value="${mail}"/>
		<property name="password" value="${key}"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.timeout">8500</prop>
			</props>
		</property>
	</bean>
	
	<!-- ==================================================================== -->
	<!-- Transaction 설정 -->
	<!-- 
	<bean id="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="tm"/>
	 -->
	 
	 <!-- Interceptor 적용 -->
	 <mvc:interceptors>
	 	<mvc:interceptor>
	 		<mvc:mapping path="/my*"/>
	 		<!-- Interceptor를 제외할 경우 -->
	 		<mvc:exclude-mapping path="/mytest"/>
	 		<bean class="or.kosta.mvc.inter.MyHandlerInterceptor"></bean>
	 	</mvc:interceptor>
	 </mvc:interceptors>
	 
	 
	 
</beans>
